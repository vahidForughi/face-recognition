// !function(){const e=document.documentElement;if(e.classList.remove("no-js"),e.classList.add("js"),document.body.classList.contains("has-animations")){const e=window.sr=ScrollReveal();e.reveal(".hero-title, .hero-paragraph, .hero-cta",{duration:1e3,distance:"40px",easing:"cubic-bezier(0.5, -0.01, 0, 1.005)",origin:"bottom",interval:150}),e.reveal(".feature, .pricing-table",{duration:600,distance:"40px",easing:"cubic-bezier(0.5, -0.01, 0, 1.005)",interval:100,origin:"bottom",viewFactor:.5}),e.reveal(".feature-extended-image",{duration:600,scale:.9,easing:"cubic-bezier(0.5, -0.01, 0, 1.005)",viewFactor:.5})}}();

const { createApp } = Vue

createApp({
    data() {
        return {
            page: 'exam',
            loading: false,
            examForm: {
                fullname: '',
                mobile: '',
                responses: {},
            },
            score: '0',
            errors: ""
        }
    },
    methods: {
        sendResponse(slug) {
            this.errors = ""
            this.loading = true
            // Default options are marked with *
            fetch("/api/exams/"+slug+"/participants", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(this.examForm), // body data type must match "Content-Type" header
            }).then(async (res) => {
                response = await res.json()
                console.log('response',response);
                if (response.success) {
                    this.score = response.data.score;
                    this.page = 'score'
                    this.scrollTo('exam-box')
                }else {
                    this.errors = response.errors ? this.parseErrors(response.errors) : 'مشکلی پیش آمده. لطفا دوباره تلاش کنید...'
                }
            }).catch((error) => {
                console.log(error)
                // this.errors = response.errors ? this.parseErrors(response.errors) : 'مشکلی پیش آمده. لطفا دوباره تلاش کنید...'
            }).finally(() => this.loading = false);
            // return response.json(); // parses JSON response into native JavaScript objects
        },

        parseErrors (errors) {
            var message = ""

            if (typeof errors === 'object' && !Array.isArray(errors) && errors !== null) {
                message += this.parseErrors(Object.keys(errors).map(function (key) { return errors[key]; }))
            }

            else if (Array.isArray(errors)) {
                var self = this
                message += errors.map(function(err) {
                    return self.parseErrors(err)
                })
            }

            else {
                message += errors + '<br>'
            }

            return message
        },

        toggleValueIn(array, value) {
            if (!Array.isArray(array)) array = [];
            var index = array.indexOf(value);

            if (index === -1) {
                array.push(value);
            } else {
                array.splice(index, 1);
            }
            return array;
        },

        scrollTo(id) {
            document.getElementById(id).scrollIntoView();
        }
    }
}).mount('#app')
